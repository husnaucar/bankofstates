[{"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\index.js":"1","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\App.js":"2","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\reportWebVitals.js":"3","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\home\\Home.jsx":"4","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\home\\Banner.js":"5","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\StateProvider.js":"6","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\reducer.js":"7","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\about\\About.js":"8","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\product\\Product.js":"9","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\price\\Price.js":"10","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\footer\\Footer.js":"11","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\login\\Login.js":"12","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\register\\Register.js":"13","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\service\\bankService.js":"14","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\user\\User.js":"15","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\Admin.js":"16","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\menus\\AdminMenu.js":"17","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\menus\\UserMenu.js":"18","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\dashboardStyle.js":"19","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Grid\\GridContainer.js":"20","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Grid\\GridItem.js":"21","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\Card.js":"22","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardHeader.js":"23","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardIcon.js":"24","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardBody.js":"25","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardFooter.js":"26","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\chart\\PlotlyChart.js":"27","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\colors.js":"28","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardStyle.js":"29","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardHeaderStyle.js":"30","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardIconStyle.js":"31","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardBodyStyle.js":"32","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardFooterStyle.js":"33","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\logout\\Logout.js":"34","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\service\\axiosInstance.js":"35","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\deposit\\Deposit.js":"36","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\header\\Header.js":"37","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\typographyStyle.js":"38","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\account\\Transactions.js":"39","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\account\\AccountInfo.js":"40","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\withdraw\\Withdraw.js":"41","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\AddRecipient.js":"42","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\Recipients.js":"43","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\Transfer.js":"44","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\UserMgmt.js":"45","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\UserDetails.js":"46"},{"size":733,"mtime":1608399034395,"results":"47","hashOfConfig":"48"},{"size":1412,"mtime":1613921979765,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":1563,"mtime":1608996692977,"results":"51","hashOfConfig":"48"},{"size":1621,"mtime":1608397758624,"results":"52","hashOfConfig":"48"},{"size":399,"mtime":1608398806955,"results":"53","hashOfConfig":"48"},{"size":793,"mtime":1612028410136,"results":"54","hashOfConfig":"48"},{"size":2852,"mtime":1608480966663,"results":"55","hashOfConfig":"48"},{"size":627,"mtime":1608484159742,"results":"56","hashOfConfig":"48"},{"size":5416,"mtime":1609001654180,"results":"57","hashOfConfig":"48"},{"size":5901,"mtime":1609004030234,"results":"58","hashOfConfig":"48"},{"size":3249,"mtime":1610905630596,"results":"59","hashOfConfig":"48"},{"size":5194,"mtime":1610903151484,"results":"60","hashOfConfig":"48"},{"size":1071,"mtime":1614441913053,"results":"61","hashOfConfig":"48"},{"size":7453,"mtime":1613842380245,"results":"62","hashOfConfig":"48"},{"size":7461,"mtime":1613930022202,"results":"63","hashOfConfig":"48"},{"size":1386,"mtime":1613920962436,"results":"64","hashOfConfig":"48"},{"size":1915,"mtime":1613836606864,"results":"65","hashOfConfig":"48"},{"size":1768,"mtime":1611413345000,"results":"66","hashOfConfig":"48"},{"size":678,"mtime":1611422614553,"results":"67","hashOfConfig":"48"},{"size":642,"mtime":1611422702257,"results":"68","hashOfConfig":"48"},{"size":1048,"mtime":1611423117960,"results":"69","hashOfConfig":"48"},{"size":1266,"mtime":1611423446603,"results":"70","hashOfConfig":"48"},{"size":1042,"mtime":1611423525062,"results":"71","hashOfConfig":"48"},{"size":1014,"mtime":1611423409982,"results":"72","hashOfConfig":"48"},{"size":1174,"mtime":1611423395209,"results":"73","hashOfConfig":"48"},{"size":423,"mtime":1611424022478,"results":"74","hashOfConfig":"48"},{"size":6673,"mtime":1611413345000,"results":"75","hashOfConfig":"48"},{"size":775,"mtime":1611413345000,"results":"76","hashOfConfig":"48"},{"size":2966,"mtime":1611413345000,"results":"77","hashOfConfig":"48"},{"size":650,"mtime":1611413345000,"results":"78","hashOfConfig":"48"},{"size":298,"mtime":1611413345000,"results":"79","hashOfConfig":"48"},{"size":1027,"mtime":1611413345000,"results":"80","hashOfConfig":"48"},{"size":1013,"mtime":1611511136151,"results":"81","hashOfConfig":"48"},{"size":367,"mtime":1612028030016,"results":"82","hashOfConfig":"48"},{"size":3618,"mtime":1612115452901,"results":"83","hashOfConfig":"48"},{"size":2788,"mtime":1612114028494,"results":"84","hashOfConfig":"48"},{"size":959,"mtime":1611413345000,"results":"85","hashOfConfig":"48"},{"size":3358,"mtime":1612713779886,"results":"86","hashOfConfig":"48"},{"size":1899,"mtime":1613322895990,"results":"87","hashOfConfig":"48"},{"size":3552,"mtime":1612721264720,"results":"88","hashOfConfig":"48"},{"size":4876,"mtime":1613323192437,"results":"89","hashOfConfig":"48"},{"size":3211,"mtime":1613323458343,"results":"90","hashOfConfig":"48"},{"size":4604,"mtime":1613840206164,"results":"91","hashOfConfig":"48"},{"size":954,"mtime":1613926288100,"results":"92","hashOfConfig":"48"},{"size":4209,"mtime":1614440670016,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1khb9d4",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\index.js",[],["196","197"],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\App.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\reportWebVitals.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\home\\Home.jsx",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\home\\Banner.js",["198"],"import React, { useState } from \"react\";\r\nimport banner1 from \"../images/banner1.png\";\r\nimport banner2 from \"../images/banner2.png\";\r\nimport banner3 from \"../images/banner3.png\";\r\nimport { Carousel, CarouselItem, CarouselControl } from \"reactstrap\";\r\n\r\nconst items = [\r\n    {\r\n      src: banner1,\r\n    },\r\n    {\r\n      src: banner2,\r\n    },\r\n    {\r\n      src: banner3,\r\n    },\r\n  ];\r\n\r\nfunction Banner() {\r\n   \r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [animating, setAnimating] = useState(false);\r\n    function next(){\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n        setActiveIndex(nextIndex);\r\n    };\r\n\r\n    function previous(){\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n        setActiveIndex(nextIndex);\r\n    };\r\n    const slides = items.map((item) => {\r\n        return (\r\n          <CarouselItem\r\n            onExiting={() => setAnimating(true)}\r\n            onExited={() => setAnimating(false)}\r\n            key={item.src}\r\n          >\r\n            <img src={item.src} />\r\n          </CarouselItem>\r\n        );\r\n      });\r\n    \r\n\r\n\r\n    return (\r\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n      {slides}\r\n      <CarouselControl\r\n        direction=\"prev\"\r\n        directionText=\"Previous\"\r\n        onClickHandler={previous}\r\n      />\r\n      <CarouselControl\r\n        direction=\"next\"\r\n        directionText=\"Next\"\r\n        onClickHandler={next}\r\n      />\r\n    </Carousel>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\StateProvider.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\reducer.js",["199","200"],"import { AspectRatioTwoTone } from \"@material-ui/icons\";\r\nimport Login from \"./login/Login\";\r\n\r\nexport const initialState = {\r\n    cart: [],\r\n    userInfo: null,\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"LOGIN\":\r\n        return {\r\n          ...state, userInfo : action.item\r\n        };\r\n        case \"UPDATE\":\r\n        return {\r\n          ...state, userInfo : action.item\r\n        };\r\n      case \"LOGOUT\":\r\n        return {\r\n          ...state, userInfo : action.item\r\n        };\r\n      case \"ADD_TO_CART\":\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, action.item],\r\n        };\r\n      case \"REMOVE_TO_CART\":\r\n        return { state };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\about\\About.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\product\\Product.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\price\\Price.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\footer\\Footer.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\login\\Login.js",["201"],"import * as React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\"; \r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Login.css\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Required\"),\r\n  username: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst LoginForm = (props) => (\r\n  <div className=\"container\">\r\n    <fieldset>\r\n      <legend>Login</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"User Name\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n            />\r\n            {props.isSubmitting && <LinearProgress />}\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"login__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\nconst Login = () => {\r\n  const history = useHistory(); // according to role it navigates related pages\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={LoginSchema}\r\n        onSubmit={(values, actions) => {\r\n          service.login(values).then((response) => {\r\n            if (response.status === 200) {\r\n              const userInfo = response.data;\r\n              localStorage.setItem(\r\n                \"auth\",\r\n                JSON.stringify({\r\n                  token: userInfo.jwt,\r\n                })\r\n              );\r\n              dispatch({\r\n                type: \"LOGIN\",\r\n                item: userInfo,\r\n              });\r\n              if (userInfo?.user?.isAdmin) { // to avoid nullpointerexception we used ?, it is equal to ----> userInfo !=null && userInfo.user != null\r\n                history.push(\"/admin\");\r\n              } else {\r\n                history.push(\"/user\");\r\n              }\r\n              toast.success(\"Login Successful\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n              });\r\n              actions.resetForm();\r\n            }\r\n          });\r\n          actions.setSubmitting(false);\r\n        }}\r\n        component={LoginForm}\r\n      ></Formik>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\register\\Register.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\service\\bankService.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\user\\User.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\Admin.js",["202"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport AccountBalanceWallet from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardBody from \"../components/Card/CardBody.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport CardFooter from \"../components/Card/CardFooter.js\";\r\nimport PlotlyChart from \"../chart/PlotlyChart\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nimport _ from \"lodash\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Admin = () => {\r\n  const classes = useStyles();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const transactions = userInfo.user.transactions;\r\n  const uniqDates = _.uniq(_.map(transactions,\"date\")).sort();\r\n \r\n  const depositArray = [];\r\n  const withdrawalArray = [];\r\n  const transferArray = [];\r\n  uniqDates.forEach(function(key){\r\n    const deposits = _.filter(transactions,function(transaction){\r\n      return transaction.type === \"DEPOSIT\" && transaction.date ===key;\r\n    });\r\n\r\n    const withdraws = _.filter(transactions,function(transaction){\r\n      return transaction.type === \"WITHDRAW\" && transaction.date ===key;\r\n    });\r\n\r\n    const transfers= _.filter(transactions,function(transaction){\r\n      return transaction.type === \"TRANSFER\" && transaction.date ===key;\r\n    });\r\n\r\n    const depositAmounts = _.map(deposits,\"amount\");\r\n    const withdrawAmounts = _.map(withdraws,\"amount\");\r\n    const transferAmounts = _.map(transfers,\"amount\");\r\n\r\n    const sumOfDeposits = _.sum(depositAmounts);\r\n    const sumOfWithdraws = _.sum(withdrawAmounts);\r\n    const sumOfTransfers = _.sum(transferAmounts);\r\n\r\n    depositArray.push(sumOfDeposits);\r\n    withdrawalArray.push(sumOfWithdraws);\r\n    const transferObject = {\r\n        date : key.substring(0,5),\r\n        amount : sumOfTransfers,\r\n    }\r\n    transferArray.push(transferObject);\r\n\r\n  });\r\n\r\n  const totalDeposit = _.sum(depositArray);\r\n  const totalWithdrawal = _.sum(withdrawalArray);\r\n  const orderedTransferArray = _.orderBy(transferArray, [\"amount\"]).reverse();\r\n  const depositData = [\r\n    {\r\n      type: \"bar\",\r\n      x: uniqDates,\r\n      y: depositArray,\r\n    },\r\n  ];\r\n  const withdrawalData = [\r\n    {\r\n      type: \"scatter\",\r\n      x: uniqDates,\r\n      y: withdrawalArray,\r\n    },\r\n  ];\r\n  const transferData = [\r\n    {\r\n      type: \"funnel\",\r\n      x: _.map(orderedTransferArray, \"amount\"),\r\n      y: _.map(orderedTransferArray, \"date\"),\r\n      hoverinfo: \"percent total+x\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo &&\r\n        userInfo.user &&\r\n        !userInfo.user.isAdmin &&\r\n        history.push(\"/login\")}\r\n      {userInfo && userInfo.user && userInfo.user.isAdmin && (\r\n        <div>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"warning\" stats icon>\r\n                  <CardIcon color=\"warning\">\r\n                    <AccountBalance />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Balance</p>\r\n                  <h3 className={classes.cardTitle}>$ {userInfo.user.totalBalance}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"success\" stats icon>\r\n                  <CardIcon color=\"success\">\r\n                    <AttachMoney />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Deposits</p>\r\n                  <h3 className={classes.cardTitle}>$ {totalDeposit}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"danger\" stats icon>\r\n                  <CardIcon color=\"danger\">\r\n                    <AccountBalanceWallet />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Withdrawals</p>\r\n                  <h3 className={classes.cardTitle}>${totalWithdrawal}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"info\" stats icon>\r\n                  <CardIcon color=\"info\">\r\n                    <Accessibility />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Users</p>\r\n                  <h3 className={classes.cardTitle}>{userInfo.user.totalUsers}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Latest\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"success\">\r\n                  <h4 color=\"white\">Total Deposit Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={depositData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"danger\">\r\n                  <h4 color=\"white\">Total Withdrawal Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={withdrawalData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"info\">\r\n                  <h4 color=\"white\">Total Transfer Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={transferData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\menus\\AdminMenu.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\menus\\UserMenu.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\dashboardStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\Card.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardHeader.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardIcon.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardBody.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\components\\Card\\CardFooter.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\chart\\PlotlyChart.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\colors.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardHeaderStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardIconStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardBodyStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\cardFooterStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\logout\\Logout.js",["203"],"import React from 'react'\r\nimport Button  from \"@material-ui/core/Button\"\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\"; \r\nimport \"./Logout.css\";\r\n\r\nconst Logout = () => {\r\n    const history = useHistory(); // according to role it navigates related pages\r\n    const [{ userInfo }, dispatch] = useStateValue();\r\n    \r\n    const handleClickYes = () =>{\r\n        localStorage.clear(\"auth\");\r\n        dispatch({\r\n            type: \"LOGOUT\",\r\n            item: null,\r\n          });\r\n          history.push(\"/\")\r\n\r\n    };\r\n    const handleClickNo = ()=> {\r\n        history.goBack();\r\n    };\r\n    return (\r\n        <div>\r\n          <fieldset>\r\n              <h1>Are you sure to logout?</h1>\r\n              <Button varient = \"contained\" color=\"primary\" onClick = {handleClickYes}>Yes</Button> \r\n              <Button varient = \"contained\" color=\"secondary\" onClick = {handleClickNo}>No</Button> \r\n          </fieldset>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Logout;\r\n","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\service\\axiosInstance.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\deposit\\Deposit.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\header\\Header.js",["204","205","206"],"import React from 'react' /*rfce*/\r\nimport logo from \"../images/logo.png\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCart from \"@material-ui/icons/ShoppingCart\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\"\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport AdminMenu from \"../menus/AdminMenu\";\r\nimport UserMenu from \"../menus/UserMenu\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Header() {\r\n  const [{ cart, userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  \r\n    return (\r\n        <nav className= \"header\">\r\n        {/* {logo} */}\r\n        <Link to=\"/\">\r\n        <img className=\"header__logo\" src={logo} alt=\"\" />\r\n        </Link>\r\n        <div>\r\n        <span className=\"header__title\">Bank of States</span>\r\n        </div>\r\n        <div className=\"header__search\">\r\n        <input type=\"text\" className=\"header__searchInput\" />\r\n        <SearchIcon className=\"header__searchIcon\" />\r\n        </div>\r\n       {!userInfo && (\r\n          <div className=\"header__nav\">\r\n            <Link to=\"/login\" className=\"header__link\">\r\n             <div className=\"header__option\">\r\n                <span className=\"header__lineOne\">Hello</span>\r\n                <span className=\"header__lineTwo\">Sign In</span>\r\n             </div>\r\n          </Link>\r\n          <Link to=\"/register\" className=\"header__link\">\r\n          <div className=\"header__option\">\r\n            <span className=\"header__lineOne\">New User</span>\r\n            <span className=\"header__lineTwo\">Register</span>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/checkout\" className=\"header__link\">\r\n          <div className=\"header__optionBasket\">\r\n            <ShoppingCart />\r\n          </div>\r\n        </Link>\r\n\r\n        </div>\r\n        )}\r\n        {userInfo && userInfo.user && userInfo.user.isAdmin && <AdminMenu />}\r\n        {userInfo && userInfo.user && !userInfo.user.isAdmin && <UserMenu />}\r\n        {userInfo && userInfo.user && (\r\n          <div className=\"header__nav header__link\">\r\n            <div className=\"header__option\">\r\n              <span className=\"header__lineOne\">Welcome</span>\r\n              <span className=\"header__lineTwo\">\r\n                {userInfo.user.firstName} {userInfo.user.lastName}\r\n              </span>\r\n            </div>\r\n            <Link to=\"/logout\" className=\"header__link\">\r\n              <div className=\"header__option\">\r\n                <span className=\"header__lineOne\">\r\n                  <ExitToApp />\r\n                </span>\r\n                <span className=\"header__lineOne\">Logout</span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        )}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\styles\\typographyStyle.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\account\\Transactions.js",["207"],"import React from \"react\";\r\nimport {useStateValue} from \"../StateProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nconst columns = [\r\n  { id: \"time\", label: \"Date\", minWidth: 170 },\r\n  { id: \"description\", label: \"Comment\", minWidth: 200 },\r\n  {\r\n    id: \"type\",\r\n    label: \"Type\",\r\n    minWidth: 170,\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"Amount\",\r\n    minWidth: 170,\r\n  },\r\n  {\r\n    id: \"availableBalance\",\r\n    label: \"Available Balance\",\r\n    minWidth: 170,\r\n  },\r\n];\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nexport default function Transactions() {\r\n  const [{ userInfo }] = useStateValue();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const rows = userInfo.user.transactions;\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\account\\AccountInfo.js",["208","209"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\n\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst AccountInfo = () => {\r\n  const classes = useStyles();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"info\" icon>\r\n              <CardIcon color=\"info\">\r\n                <AccountBalance />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Account Number</p>\r\n              <h3 className={classes.cardTitle}>\r\n                {userInfo.user.accountNumber}\r\n              </h3>\r\n            </CardHeader>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"success\" icon>\r\n              <CardIcon color=\"success\">\r\n                <AccountBalanceWalletIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Balance</p>\r\n              <h3 className={classes.cardTitle}>\r\n                $ {userInfo.user.accountBalance}\r\n              </h3>\r\n            </CardHeader>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\withdraw\\Withdraw.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\AddRecipient.js",["210"],"import React from \"react\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountInfo from \"../account/AccountInfo\";\r\nimport Recipients from \"./Recipients\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"../styles/typographyStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RecipientSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n  phone: Yup.number()\r\n    .positive(\"Phone Number can't start with a minus\")\r\n    .integer(\"A phone number can't include a decimal point\")\r\n    .required(\"Contact Number is Required\"),\r\n  bankName: Yup.string().required(\"Bank Name is Required\"),\r\n  bankNumber: Yup.string().required(\"Bank Number is Required\"),\r\n});\r\n\r\nconst RecipientForm = (props) => (\r\n  <div>\r\n    <fieldset>\r\n      <legend>Add Recipient</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field component={TextField} name=\"name\" type=\"text\" label=\"Name\" />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"number\"\r\n              label=\"Contact Number\"\r\n              name=\"phone\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Name\"\r\n              name=\"bankName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Number\"\r\n              name=\"bankNumber\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"Recipient__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            {props.isSubmitting && <LinearProgress />}\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst AddRecipient = () => {\r\n  const [{ userInfo, recipients }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo && userInfo.user && (\r\n        <div>\r\n          <AccountInfo />\r\n          <div>\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                bankName: \"\",\r\n                bankNumber: \"\",\r\n              }}\r\n              validationSchema={RecipientSchema}\r\n              onSubmit={(values, actions) => {\r\n                service.addRecipient(values).then((response) => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.success) {\r\n                      const userInfo = response.data;\r\n                      dispatch({\r\n                        type: \"UPDATE\",\r\n                        item: userInfo,\r\n                      });\r\n                      toast.success(userInfo.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                      });\r\n                      actions.resetForm();\r\n                    }\r\n                  }\r\n                });\r\n                actions.setSubmitting(false);\r\n              }}\r\n              component={RecipientForm}\r\n            ></Formik>\r\n            <ToastContainer />\r\n          </div>\r\n          <Divider />\r\n          <h1 className={classes.infoText}>Recipients</h1>\r\n          <Recipients />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecipient;","C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\Recipients.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\transfer\\Transfer.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\UserMgmt.js",[],"C:\\Users\\serka\\Desktop\\TechProEd\\REACTProjectClass\\bankofstates\\src\\admin\\UserDetails.js",["211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":41,"column":13,"nodeType":"218","endLine":41,"endColumn":35},{"ruleId":"219","severity":1,"message":"220","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"223","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":13},{"ruleId":"219","severity":1,"message":"224","line":61,"column":12,"nodeType":"221","messageId":"222","endLine":61,"endColumn":20},{"ruleId":"219","severity":1,"message":"225","line":27,"column":24,"nodeType":"221","messageId":"222","endLine":27,"endColumn":32},{"ruleId":"219","severity":1,"message":"224","line":9,"column":14,"nodeType":"221","messageId":"222","endLine":9,"endColumn":22},{"ruleId":"219","severity":1,"message":"226","line":14,"column":12,"nodeType":"221","messageId":"222","endLine":14,"endColumn":16},{"ruleId":"219","severity":1,"message":"225","line":14,"column":30,"nodeType":"221","messageId":"222","endLine":14,"endColumn":38},{"ruleId":"219","severity":1,"message":"227","line":15,"column":9,"nodeType":"221","messageId":"222","endLine":15,"endColumn":16},{"ruleId":"219","severity":1,"message":"228","line":31,"column":10,"nodeType":"221","messageId":"222","endLine":31,"endColumn":20},{"ruleId":"219","severity":1,"message":"229","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":20},{"ruleId":"219","severity":1,"message":"225","line":19,"column":24,"nodeType":"221","messageId":"222","endLine":19,"endColumn":32},{"ruleId":"219","severity":1,"message":"230","line":99,"column":22,"nodeType":"221","messageId":"222","endLine":99,"endColumn":32},{"ruleId":"219","severity":1,"message":"231","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'AspectRatioTwoTone' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'userInfo' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'cart' is assigned a value but never used.","'history' is assigned a value but never used.","'createData' is defined but never used.","'useHistory' is defined but never used.","'recipients' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]